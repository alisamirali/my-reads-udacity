{"version":3,"sources":["Author.js","BooksAPI.js","SingleBook.js","SearchBooks.js","SingleBookshelf.js","Bookshelfs.js","App.js","index.js"],"names":["Author","props","authoName","react_default","a","createElement","className","api","token","localStorage","Math","random","toString","substr","headers","Accept","Authorization","update","book","shelf","fetch","concat","id","method","Object","objectSpread","Content-Type","body","JSON","stringify","then","res","json","search","query","data","books","SingleBook","_isMounted","state","handleSelectChange","value","BooksAPI","_this","setState","UpdateBooks","bookId","_this2","this","_ref","_this3","background","imageLinks","thumbnail","key","style","width","height","onChange","event","target","disabled","title","authors","map","author","src_Author","Component","SearchBooks","updateInputValue","_handleKeyDown","searchBooks","_this$state","react_router_dom","to","type","placeholder","onKeyDown","_","debounce","length","b","src_SingleBook","SingleBookshelf","bookshelfTitle","slicedToArray","Bookshelfs","booksByshelf","src_SingleBookshelf","booksBysingleShelf","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_loop","singleShelf","filter","toConsumableArray","_iterator","shelfs","Symbol","iterator","next","done","err","return","BooksApp","booksArray","shelfsArray","bA","eachShelf","eS","react_router","exact","path","render","src_Bookshelfs","src_SearchBooks","React","ReactDOM","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.af378617.chunk.js","sourcesContent":["import React from 'react';\n\nfunction Author(props) {\n    let {authoName} = props;\n    return(\n        <div className=\"book-authors\">{authoName}</div> \n    )\n}\n\nexport default Author;\n\n\n\n\n","\nconst api = \"https://reactnd-books-api.udacity.com\"\n\nlet token = localStorage.token\nif (!token)\n  token = localStorage.token = Math.random().toString(36).substr(-8)\n\nconst headers = {\n  'Accept': 'application/json',\n  'Authorization': token\n}\n\nexport const get = (bookId) =>\n  fetch(`${api}/books/${bookId}`, { headers })\n    .then(res => res.json())\n    .then(data => data.book)\n\nexport const getAll = () =>\n  fetch(`${api}/books`, { headers })\n    .then(res => res.json())\n    .then(data => data.books)\n\nexport const update = (book, shelf) =>\n  fetch(`${api}/books/${book.id}`, {\n    method: 'PUT',\n    headers: {\n      ...headers,\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({ shelf })\n  }).then(res => res.json())\n\nexport const search = (query) =>\n  fetch(`${api}/search`, {\n    method: 'POST',\n    headers: {\n      ...headers,\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({ query })\n  }).then(res => res.json())\n    .then(data => data.books)\n","import React, { Component  } from 'react';\nimport Author from \"./Author\";\nimport * as BooksAPI from \"./BooksAPI\";\nimport PropTypes from 'prop-types';\nclass SingleBook extends Component {\n    \n    _isMounted = false;\n    static propTypes = {\n        book: PropTypes.object.isRequired,\n        UpdateBooks: PropTypes.func.isRequired\n    }\n    state = {\n        shelf: ''\n    }\n    handleSelectChange = (value, book) => {\n         BooksAPI.update(book, value)\n        .then((shelf) => {\n            this.setState({shelf:value});\n            this.props.UpdateBooks(shelf, book);\n        })\n    }\n    componentDidMount() {\n        this._isMounted = true;\n        BooksAPI.get(this.props.book.id)\n            .then(({shelf}) => {\n                if (this._isMounted) {\n                    this.setState({shelf:shelf});\n                }\n            })\n    }\n    componentWillUnmount() {\n        this._isMounted = false;\n    }\n    \n    render() {\n        let {book} = this.props;\n        const shelf = this.state.shelf;\n        //define cover of the book, if image exists we put the image, else we put the white color as background\n        const background = book.imageLinks ? `url(${book.imageLinks.thumbnail})` : `#fff`\n        return(\n            <li key={book.id}>\n                <div className=\"book\">\n                    <div className=\"book-top\">\n                        <div className=\"book-cover\" style={{ width: 128, height: 193, background: background}}></div>\n                        <div className=\"book-shelf-changer\">\n                            <select onChange={(event) => this.handleSelectChange(event.target.value, book)} value={shelf} >\n                                <option value=\"move\" disabled>Move to...</option>\n                                <option value=\"currentlyReading\">Currently Reading</option>\n                                <option value=\"wantToRead\">Want to Read</option>\n                                <option value=\"read\">Read</option>\n                                <option value=\"none\">None</option>\n                            </select>\n                        </div>\n                    </div>\n                    <div className=\"book-title\">{book.title}</div>\n                    {\n                        book.authors && book.authors.map(author => ( <Author authoName={author} key={author} />))\n                    }\n                </div>\n            </li>\n        )\n    }\n}\n\nexport default SingleBook;\n\n\n\n\n","import React, { Component  } from 'react';\nimport { Link } from \"react-router-dom\";\nimport SingleBook from \"./SingleBook\";\nimport _ from \"lodash\";\nimport * as BooksAPI from \"./BooksAPI\";\nimport PropTypes from 'prop-types';\nclass SearchBooks extends Component {\n    static propTypes = {\n        UpdateBooks: PropTypes.func.isRequired\n    }\n    state = {\n        query: '',\n        books: []\n    }\n    updateInputValue = (value) => {\n        this.setState(() => ({\n            query: value\n        }))\n    }\n    _handleKeyDown = () => {\n        this.state.query !== '' && this.searchBooks(this.state.query)\n    }\n    searchBooks = (query) =>{\n        BooksAPI.search(query)\n        .then(books => {\n            this.setState({books:books});\n        })\n    }\n\n   render() {\n     const { query, books } = this.state;\n       return(\n           <div className=\"search-books\">\n            <div className=\"search-books-bar\">\n              <Link className=\"close-search\" to='/' >Close</Link>\n              <div className=\"search-books-input-wrapper\">\n                <input type=\"text\" placeholder=\"Search by title or author\" value={query} onKeyDown={_.debounce(this._handleKeyDown, 400)} onChange={(event) => this.updateInputValue(event.target.value)} />\n              </div>\n            </div>\n            <div className=\"search-books-results\">\n              <ol className=\"books-grid\">\n                {query !== '' && books.length> 0 &&\n                    books.map((b) =>  <SingleBook key={b.id} book={b} UpdateBooks={this.props.UpdateBooks} />)}\n              </ol>\n            </div>\n          </div>\n       )\n   }\n}\n\nexport default SearchBooks;","import React from 'react';\nimport SingleBook from \"./SingleBook\";\nimport PropTypes from 'prop-types';\nfunction SingleBookshelf(props) {\n    let {books, title}=props;\n    let bookshelfTitle = '';\n    \n    if (title === 'currentlyReading') {\n       bookshelfTitle = 'Currently Reading';\n    }\n    if (title === 'wantToRead') {\n       bookshelfTitle = 'Want to Read';\n    }\n    if (title === 'read') {\n        bookshelfTitle = 'Read';\n    }\n    return(\n        <div className=\"bookshelf\">\n            <h2 className=\"bookshelf-title\">{bookshelfTitle}</h2>\n            <div className=\"bookshelf-books\">\n                <ol className=\"books-grid\">\n                {\n                    books.map(([book]) => {\n                        return (\n                            <SingleBook key={book.id} book={book} UpdateBooks={props.UpdateBooks} />\n                        )\n                    })\n                }\n                </ol>\n            </div>\n        </div>\n    )\n}\nSingleBookshelf.propTypes = {\n    books: PropTypes.array.isRequired,\n    title: PropTypes.string.isRequired,\n    UpdateBooks: PropTypes.func.isRequired\n}\nexport default SingleBookshelf;\n\n","import React, { Component } from 'react';\nimport SingleBookshelf from \"./SingleBookshelf\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from 'prop-types';\nclass Bookshelfs extends Component {\n    static propTypes = {\n        books: PropTypes.array.isRequired,\n        shelfs: PropTypes.array.isRequired,\n        UpdateBooks: PropTypes.func.isRequired\n    }\n    state={\n        booksByshelf: []\n    }\n    \n    static getDerivedStateFromProps(props) {\n        let booksBysingleShelf = [];\n        for (const singleShelf of props.shelfs){\n            let booksByshelf = props.books.filter(({shelf}) => shelf === singleShelf ).map(book => {\n                return [book];\n            })\n            booksBysingleShelf = [...booksBysingleShelf, ...[{shelf:singleShelf, books:booksByshelf}]];\n        }\n        return {\n            booksByshelf: booksBysingleShelf\n        }\n    }\n\n\n    render() {\n        const {booksByshelf} = this.state;\n        return(\n            <div>\n                <div className=\"list-books\">\n                    <div className=\"list-books-title\">\n                        <h1>MyReads - Ali Samir</h1>\n                    </div>\n                    <div className=\"list-books-content\">\n                        {\n                            booksByshelf.map(shelf =>\n                                shelf!== 'none' && <SingleBookshelf key={shelf.shelf} books={shelf.books} title={shelf.shelf} UpdateBooks={this.props.UpdateBooks}  />\n                            )\n                        }\n                    </div>\n                </div>\n                <div className=\"open-search\">\n                    <Link className='close-create-contact' to='/search'>Close</Link>\n                </div>\n            </div>\n       )\n   }\n}\n\nexport default Bookshelfs;\n\n","import React from 'react'\nimport SearchBooks from \"./SearchBooks\";\nimport Bookshelfs from \"./Bookshelfs\";\nimport { Route } from \"react-router-dom\";\nimport './App.css'\nimport * as BooksAPI from \"./BooksAPI\";\n\nclass BooksApp extends React.Component {\n    state = {\n        books: []\n    }\n    componentDidMount() {\n        BooksAPI.getAll()\n        .then(books => {\n            this.setState({books: books})\n        })\n    }\n\n    UpdateBooks = (shelfs, book) =>{\n        let booksArray = this.state.books;\n        const shelfsArray = shelfs;\n        const bookExistIntoState = booksArray.filter(bA => bA.id === book.id);\n        if (bookExistIntoState.length === 0) booksArray = [...booksArray, ...[book]]\n        booksArray.map(bA =>  bA.shelf = 'none');\n        for (let eachShelf in shelfsArray) {\n            shelfsArray[eachShelf].map(eS => \n                booksArray.filter(bA => bA.id === eS).map(bA => bA.shelf = eachShelf)\n            )\n        }\n        this.setState({books:booksArray});\n    }\n\n\n    render() {\n        return (\n        <div className=\"app\">\n            <Route exact path='/' render={() => (\n                <Bookshelfs books={this.state.books} shelfs={['currentlyReading','wantToRead','read']} UpdateBooks={this.UpdateBooks} / >\n            )} />\n            <Route path='/search' render={() => (\n               <SearchBooks UpdateBooks={this.UpdateBooks} />\n            )} />\n        </div>\n        )\n    }\n}\n\nexport default BooksApp;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\nimport { BrowserRouter } from \"react-router-dom\";\n\n\nReactDOM.render(\n    <BrowserRouter> \n        < App / > \n    </BrowserRouter>, document.getElementById('root'));\n"],"sourceRoot":""}